# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Dotnet-Unit-Tests

on:
  push:
    branches:    
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - '!master'   # excludes master
      - '!main'   # excludes main
  pull_request:
    # The branches below must be a subset of the branches above
    branches: ["main"]

  # Allows you to run this workflow called from another WF
  workflow_call:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  configuration: 'Release'
  solution_path: 'Aranzadi.DocumentAnalysis.Messaging.sln'
  nuget_feed_name: 'SWF_Burgos_Spain_Artifacts_feed'
  nuget_feed_source: 'https://pkgs.dev.azure.com/TR-Legal-OnlineServices/_packaging/SWF_Burgos_Spain_Artifacts_feed/nuget/v3/index.json'
  password_ado: ${{secrets.PASSWORD_ADO}}
  nuget_config: './Nuget.Config'

jobs:
  build:    
   
    name: Build and Test
    runs-on: windows-latest

    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write

    strategy:
      matrix:
        nuget_version: [5.x]
        dotnet_version: [6.x]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet_version }}

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1
      with:
        nuget-version: ${{ matrix.nuget_version }}

    - name: Auth Nuget TR
      run: dotnet nuget add source ${{ env.nuget_feed_source }} --name ${{ env.nuget_feed_name }} --username 'david.sanchezfuentes@thomsonreuters.com' --password ${{ env.password_ado }} --store-password-in-clear-text --configfile ${{ env.nuget_config }}

    - name: Restore Nuget Packages
      run: dotnet restore ${{ env.solution_path }} --verbosity normal 

    - name: Build Solution
      run: dotnet build ${{ env.solution_path }} --configuration ${{ env.configuration }} --no-restore

    # - name: Run Test
    #   id: test
    #   run: dotnet test --logger "trx;LogFileName=test_results.xml" --configuration ${{ env.configuration }} --no-restore --no-build --verbosity normal
    #   working-directory: ./Aranzadi.DocumentAnalysis.Messaging.Test

    # - name: Publish Test Results
    #   uses: EnricoMi/publish-unit-test-result-action/composite@v2
    #   with:
    #     files: "**/test_results.xml"
    #     format: "trx"
    - name: DotNet Unit Test
      uses: zyborg/dotnet-tests-report@v1
      if: ${{ !cancelled() }}
      with:
        project_path: ./Aranzadi.DocumentAnalysis.Messaging.Test
        report_name: Unit Tests Result
        report_title: Unit Tests Result
        github_token: ${{ secrets.GITHUB_TOKEN }}
        gist_name: unit_tests.md
        gist_badge_label: "Unit-Tests: %Counters_passed%/%Counters_total%"
        gist_token: ${{ secrets.GIST_TKV }}
        set_check_status_from_test_outcome: true

    # - name: Generate coverage report
    #   run: dotnet test --no-build --configuration ${{ env.configuration }} --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
      
    # - name: Code Coverage Report
    #   uses: irongut/CodeCoverageSummary@v1.3.0
    #   with:
    #     filename: coverage/**/coverage.cobertura.xml
    #     badge: true
    #     fail_below_min: true
    #     format: markdown
    #     hide_branch_rate: false
    #     hide_complexity: true
    #     indicators: true
    #     output: both
    #     thresholds: "30 30"
    # #generate artifacts
    # - name: "ðŸ“‚ production artifacts"
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: TestResult
    #     path: _TMP/test-results.trx

    # - name: "ðŸ“‚ production artifacts"
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: CodeCoverage
    #     path: code-coverage-results.md

    # - name: Add test Results PR Comment
    #   uses: marocchino/sticky-pull-request-comment@v2
    #   if: github.event_name == 'pull_request'
    #   with:
    #     header: test
    #     append: true
    #     path: _TMP/test-results.md

    # - name: Add Coverage PR Comment
    #   uses: marocchino/sticky-pull-request-comment@v2
    #   if: github.event_name == 'pull_request'
    #   with:
    #     header: test
    #     append: true
    #     path: code-coverage-results.md

    # - uses: popsiclestick/gist-sync-action@v1.2.0
    #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    #   id: GitsCodeCoverage2
    #   with:
    #     auth: ${{ secrets.GIST_TKV }}
    #     gist_url: https://gist.github.com/DavidSanchezTR/d1afe92d24794d0553b8c16b89dafcb1
    #     gist_title: code-coverage-results.md
    #     gist_description: code coverage results for ${{ github.ref }} 
    #     github_file: code-coverage-results.md