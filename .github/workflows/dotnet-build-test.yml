# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Test

on:
  push:
    branches:    
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - '!master'   # excludes master
      - '!main'   # excludes main
  pull_request:
    # The branches below must be a subset of the branches above
    branches: ["main"]

  # Allows you to run this workflow called from another WF
  workflow_call:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    env:
      configuration: 'Release'
      solution_path: 'Aranzadi.DocumentAnalysis.Messaging.sln'
      nuget_feed_name: 'SWF_Burgos_Spain_Artifacts_feed'
      nuget_feed_source: 'https://pkgs.dev.azure.com/TR-Legal-OnlineServices/_packaging/SWF_Burgos_Spain_Artifacts_feed/nuget/v3/index.json'
      nuget_api_key: ${{secrets.APIKEY_ARANZADI_NUGET}}
      password_ado: ${{secrets.PASSWORD_ADO}}
      nuget_config: './Nuget.Config'

    name: Build and Test
    runs-on: windows-latest
    strategy:
      matrix:
        nuget_version: [5.x]
        dotnet_version: [5.0.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet_version }}

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1
      with:
        nuget-version: ${{ matrix.nuget_version }}

    - name: Auth Nuget TR
      run: dotnet nuget add source ${{ env.nuget_feed_source }} --name ${{ env.nuget_feed_name }} --username 'david.sanchezfuentes@thomsonreuters.com' --password ${{ env.password_ado }} --store-password-in-clear-text --configfile ${{ env.nuget_config }}

    - name: Restore Nuget Packages
      run: dotnet restore ${{ env.solution_path }} --verbosity normal 

    - name: Build Solution
      run: dotnet build ${{ env.solution_path }} --configuration ${{ env.configuration }} --no-restore

    - name: Run Test
      run: dotnet test --logger "trx;LogFileName=test_results.xml" --configuration ${{ env.configuration }} --no-restore --no-build --verbosity normal
      working-directory: ./Aranzadi.DocumentAnalysis.Messaging.Test

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      with:
        files: "**/test_results.xml"
        format: "trx"

    - name: Generate Test Coverage Report
      uses: coverallsapp/github-action@v1.4.4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-lcov: true
        exclude: |
          MyProject.Tests/**
          **/obj/**

    - name: Create Test Coverage Badge
      uses: badgen/badgen-action@v1.3.3
      with:
        subject: test-coverage
        status: ${{ steps.test.outputs.coverage }}
        color: "#4c1"

    - name: Add Link to Test Report in README
      uses: dawidd6/action-add-link-to-readme@v2.4.0
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        file: README.md
        message: Add link to test report
        replacement-pattern: '(\[!\[Test Results\]\(https://github.com/DavidSanchezTR/POC_DocumentAnalysisService/badge.svg\)\]\(https://github.com/DavidSanchezTR/POC_DocumentAnalysisService/actions/runs/123456789\))'
        link: 'https://coveralls.io/github/DavidSanchezTR/POC_DocumentAnalysisService?branch=main'        